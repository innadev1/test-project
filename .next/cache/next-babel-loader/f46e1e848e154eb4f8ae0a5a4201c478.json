{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nconst exampleInitialState = {\n  lastUpdate: 0,\n  light: false,\n  count: 0,\n  helloWorld: {\n    title: 'Hello World!'\n  }\n};\nexport const actionTypes = {\n  TICK: 'TICK',\n  INCREMENT: 'INCREMENT',\n  DECREMENT: 'DECREMENT',\n  RESET: 'RESET' // REDUCERS\n\n};\nexport const reducer = (state = exampleInitialState, action) => {\n  switch (action.type) {\n    case actionTypes.TICK:\n      return _Object$assign({}, state, {\n        lastUpdate: action.ts,\n        light: !!action.light\n      });\n\n    case actionTypes.INCREMENT:\n      return _Object$assign({}, state, {\n        count: state.count + 1\n      });\n\n    case actionTypes.DECREMENT:\n      return _Object$assign({}, state, {\n        count: state.count - 1\n      });\n\n    case actionTypes.RESET:\n      return _Object$assign({}, state, {\n        count: exampleInitialState.count\n      });\n\n    case actionTypes.SET:\n      return _Object$assign({}, state, {});\n\n    default:\n      return state;\n  }\n}; // ACTIONS\n\nexport const setHelloWorld = () => ({\n  type: types.SET,\n  data\n});\nexport const serverRenderClock = () => {\n  return {\n    type: actionTypes.TICK,\n    light: false,\n    ts: _Date$now()\n  };\n};\nexport const startClock = () => {\n  return {\n    type: actionTypes.TICK,\n    light: true,\n    ts: _Date$now()\n  };\n};\nexport const incrementCount = () => {\n  return {\n    type: actionTypes.INCREMENT\n  };\n};\nexport const decrementCount = () => {\n  return {\n    type: actionTypes.DECREMENT\n  };\n};\nexport const resetCount = () => {\n  return {\n    type: actionTypes.RESET\n  };\n};\nexport function initializeStore(initialState = exampleInitialState) {\n  return createStore(reducer, initialState, composeWithDevTools(applyMiddleware()));\n}","map":{"version":3,"sources":["/Users/innadevjatnina/Documents/test-project/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","exampleInitialState","lastUpdate","light","count","helloWorld","title","actionTypes","TICK","INCREMENT","DECREMENT","RESET","reducer","state","action","type","ts","SET","setHelloWorld","types","data","serverRenderClock","startClock","incrementCount","decrementCount","resetCount","initializeStore","initialState"],"mappings":"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","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst exampleInitialState = {\n  lastUpdate: 0,\n  light: false,\n  count: 0,\n  helloWorld: {\n    title: 'Hello World!',\n  }\n}\n\nexport const actionTypes = {\n  TICK: 'TICK',\n  INCREMENT: 'INCREMENT',\n  DECREMENT: 'DECREMENT',\n  RESET: 'RESET'\n}\n\n// REDUCERS\nexport const reducer = (state = exampleInitialState, action) => {\n  switch (action.type) {\n    case actionTypes.TICK:\n      return Object.assign({}, state, {\n        lastUpdate: action.ts,\n        light: !!action.light\n      })\n    case actionTypes.INCREMENT:\n      return Object.assign({}, state, {\n        count: state.count + 1\n      })\n    case actionTypes.DECREMENT:\n      return Object.assign({}, state, {\n        count: state.count - 1\n      })\n    case actionTypes.RESET:\n      return Object.assign({}, state, {\n        count: exampleInitialState.count\n      })\n    case actionTypes.SET:\n    return Object.assign({}, state, {})\n    \n    default:\n      return state\n  }\n}\n\n// ACTIONS\nexport const setHelloWorld = () => ({ type: types.SET, data })\n\nexport const serverRenderClock = () => {\n  return { type: actionTypes.TICK, light: false, ts: Date.now() }\n}\n\nexport const startClock = () => {\n  return { type: actionTypes.TICK, light: true, ts: Date.now() }\n}\n\nexport const incrementCount = () => {\n  return { type: actionTypes.INCREMENT }\n}\n\nexport const decrementCount = () => {\n  return { type: actionTypes.DECREMENT }\n}\n\nexport const resetCount = () => {\n  return { type: actionTypes.RESET }\n}\n\nexport function initializeStore (initialState = exampleInitialState) {\n  return createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware())\n  )\n}"]},"metadata":{},"sourceType":"module"}