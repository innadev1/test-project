{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/innadevjatnina/Documents/test-project/components/counter.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { incrementCount, decrementCount, resetCount } from '../store';\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"increment\", () => {\n      const {\n        incrementCount\n      } = this.props;\n      incrementCount();\n    });\n\n    _defineProperty(this, \"decrement\", () => {\n      const {\n        decrementCount\n      } = this.props;\n      decrementCount();\n    });\n\n    _defineProperty(this, \"reset\", () => {\n      const {\n        resetCount\n      } = this.props;\n      resetCount();\n    });\n  }\n\n  render() {\n    const {\n      count\n    } = this.props;\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Count: \", __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, count)), __jsx(\"button\", {\n      onClick: this.increment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"+1\"), __jsx(\"button\", {\n      onClick: this.decrement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"-1\"), __jsx(\"button\", {\n      onClick: this.reset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Reset\"));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const {\n    count\n  } = state;\n  return {\n    count\n  };\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  incrementCount,\n  decrementCount,\n  resetCount\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","map":{"version":3,"sources":["/Users/innadevjatnina/Documents/test-project/components/counter.js"],"names":["React","Component","connect","bindActionCreators","incrementCount","decrementCount","resetCount","Counter","props","render","count","increment","decrement","reset","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAyCC,UAAzC,QAA2D,UAA3D;;AAEA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAAA;AAAA;;AAAA,uCAClB,MAAM;AAChB,YAAM;AAAEG,QAAAA;AAAF,UAAqB,KAAKI,KAAhC;AACAJ,MAAAA,cAAc;AACf,KAJ6B;;AAAA,uCAMlB,MAAM;AAChB,YAAM;AAAEC,QAAAA;AAAF,UAAqB,KAAKG,KAAhC;AACAH,MAAAA,cAAc;AACf,KAT6B;;AAAA,mCAWtB,MAAM;AACZ,YAAM;AAAEC,QAAAA;AAAF,UAAiB,KAAKE,KAA5B;AACAF,MAAAA,UAAU;AACX,KAd6B;AAAA;;AAgB9BG,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAvB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOE,KAAP,CADT,CADF,EAIE;AAAQ,MAAA,OAAO,EAAE,KAAKC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAKE;AAAQ,MAAA,OAAO,EAAE,KAAKC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,EAME;AAAQ,MAAA,OAAO,EAAE,KAAKC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,CADF;AAUD;;AA5B6B;;AA+BhC,SAASC,eAAT,CAA0BC,KAA1B,EAAiC;AAC/B,QAAM;AAAEL,IAAAA;AAAF,MAAYK,KAAlB;AACA,SAAO;AAAEL,IAAAA;AAAF,GAAP;AACD;;AACD,MAAMM,kBAAkB,GAAGC,QAAQ,IACjCd,kBAAkB,CAAC;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA,cAAlB;AAAkCC,EAAAA;AAAlC,CAAD,EAAiDW,QAAjD,CADpB;;AAGA,eAAef,OAAO,CACpBY,eADoB,EAEpBE,kBAFoB,CAAP,CAGbT,OAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { incrementCount, decrementCount, resetCount } from '../store'\n\nclass Counter extends Component {\n  increment = () => {\n    const { incrementCount } = this.props\n    incrementCount()\n  }\n\n  decrement = () => {\n    const { decrementCount } = this.props\n    decrementCount()\n  }\n\n  reset = () => {\n    const { resetCount } = this.props\n    resetCount()\n  }\n\n  render () {\n    const { count } = this.props\n    return (\n      <div>\n        <h1>\n          Count: <span>{count}</span>\n        </h1>\n        <button onClick={this.increment}>+1</button>\n        <button onClick={this.decrement}>-1</button>\n        <button onClick={this.reset}>Reset</button>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  const { count } = state\n  return { count }\n}\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ incrementCount, decrementCount, resetCount }, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Counter)"]},"metadata":{},"sourceType":"module"}