{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/innadevjatnina/Documents/test-project/components/counter.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { incrementCount, decrementCount, resetCount } from '../store';\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"increment\", function () {\n      var incrementCount = _this.props.incrementCount;\n      incrementCount();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"decrement\", function () {\n      var decrementCount = _this.props.decrementCount;\n      decrementCount();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"reset\", function () {\n      var resetCount = _this.props.resetCount;\n      resetCount();\n    });\n\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    value: function render() {\n      var count = this.props.count;\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Count: \", __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, count)), __jsx(\"button\", {\n        onClick: this.increment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"+1\"), __jsx(\"button\", {\n        onClick: this.decrement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"-1\"), __jsx(\"button\", {\n        onClick: this.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Reset\"));\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nfunction mapStateToProps(state) {\n  var count = state.count;\n  return {\n    count: count\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    incrementCount: incrementCount,\n    decrementCount: decrementCount,\n    resetCount: resetCount\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","map":{"version":3,"sources":["/Users/innadevjatnina/Documents/test-project/components/counter.js"],"names":["React","Component","connect","bindActionCreators","incrementCount","decrementCount","resetCount","Counter","props","count","increment","decrement","reset","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAyCC,UAAzC,QAA2D,UAA3D;;IAEMC,O;;;;;;;;;;;;;;;;;;gEACQ,YAAM;AAAA,UACRH,cADQ,GACW,MAAKI,KADhB,CACRJ,cADQ;AAEhBA,MAAAA,cAAc;AACf,K;;gEAEW,YAAM;AAAA,UACRC,cADQ,GACW,MAAKG,KADhB,CACRH,cADQ;AAEhBA,MAAAA,cAAc;AACf,K;;4DAEO,YAAM;AAAA,UACJC,UADI,GACW,MAAKE,KADhB,CACJF,UADI;AAEZA,MAAAA,UAAU;AACX,K;;;;;;;6BAES;AAAA,UACAG,KADA,GACU,KAAKD,KADf,CACAC,KADA;AAER,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,KAAP,CADT,CADF,EAIE;AAAQ,QAAA,OAAO,EAAE,KAAKC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAKE;AAAQ,QAAA,OAAO,EAAE,KAAKC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAME;AAAQ,QAAA,OAAO,EAAE,KAAKC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,CADF;AAUD;;;;EA5BmBX,S;;AA+BtB,SAASY,eAAT,CAA0BC,KAA1B,EAAiC;AAAA,MACvBL,KADuB,GACbK,KADa,CACvBL,KADuB;AAE/B,SAAO;AAAEA,IAAAA,KAAK,EAALA;AAAF,GAAP;AACD;;AACD,IAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SACjCb,kBAAkB,CAAC;AAAEC,IAAAA,cAAc,EAAdA,cAAF;AAAkBC,IAAAA,cAAc,EAAdA,cAAlB;AAAkCC,IAAAA,UAAU,EAAVA;AAAlC,GAAD,EAAiDU,QAAjD,CADe;AAAA,CAAnC;;AAGA,eAAed,OAAO,CACpBW,eADoB,EAEpBE,kBAFoB,CAAP,CAGbR,OAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { incrementCount, decrementCount, resetCount } from '../store'\n\nclass Counter extends Component {\n  increment = () => {\n    const { incrementCount } = this.props\n    incrementCount()\n  }\n\n  decrement = () => {\n    const { decrementCount } = this.props\n    decrementCount()\n  }\n\n  reset = () => {\n    const { resetCount } = this.props\n    resetCount()\n  }\n\n  render () {\n    const { count } = this.props\n    return (\n      <div>\n        <h1>\n          Count: <span>{count}</span>\n        </h1>\n        <button onClick={this.increment}>+1</button>\n        <button onClick={this.decrement}>-1</button>\n        <button onClick={this.reset}>Reset</button>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps (state) {\n  const { count } = state\n  return { count }\n}\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ incrementCount, decrementCount, resetCount }, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Counter)"]},"metadata":{},"sourceType":"module"}