{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/innadevjatnina/Documents/test-project/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { startClock, serverRenderClock } from '../store';\nimport Examples from '../components/examples';\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Index).apply(this, arguments));\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      // DISPATCH ACTIONS HERE FROM `mapDispatchToProps`\n      // TO TICK THE CLOCK\n      this.timer = setInterval(function () {\n        return _this.props.startClock();\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Examples, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var reduxStore = _ref.reduxStore,\n          req = _ref.req;\n      var isServer = !!req; // DISPATCH ACTIONS HERE ONLY WITH `reduxStore.dispatch`\n\n      reduxStore.dispatch(serverRenderClock(isServer));\n      return {};\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nvar mapDispatchToProps = {\n  startClock: startClock\n};\nexport default connect(null, mapDispatchToProps)(Index);","map":{"version":3,"sources":["/Users/innadevjatnina/Documents/test-project/pages/index.js"],"names":["React","connect","startClock","serverRenderClock","Examples","Index","timer","setInterval","props","clearInterval","reduxStore","req","isServer","dispatch","Component","mapDispatchToProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,UAA9C;AACA,OAAOC,QAAP,MAAqB,wBAArB;;IAEMC,K;;;;;;;;;;;;;wCASiB;AAAA;;AACnB;AACA;AACA,WAAKC,KAAL,GAAaC,WAAW,CAAC;AAAA,eAAM,KAAI,CAACC,KAAL,CAAWN,UAAX,EAAN;AAAA,OAAD,EAAgC,IAAhC,CAAxB;AACD;;;2CAEuB;AACtBO,MAAAA,aAAa,CAAC,KAAKH,KAAN,CAAb;AACD;;;6BAES;AACR,aAAO,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;0CApB4C;AAAA,UAAnBI,UAAmB,QAAnBA,UAAmB;AAAA,UAAPC,GAAO,QAAPA,GAAO;AAC3C,UAAMC,QAAQ,GAAG,CAAC,CAACD,GAAnB,CAD2C,CAE3C;;AACAD,MAAAA,UAAU,CAACG,QAAX,CAAoBV,iBAAiB,CAACS,QAAD,CAArC;AAEA,aAAO,EAAP;AACD;;;;EAPiBZ,KAAK,CAACc,S;;AAuB1B,IAAMC,kBAAkB,GAAG;AAAEb,EAAAA,UAAU,EAAVA;AAAF,CAA3B;AACA,eAAeD,OAAO,CACpB,IADoB,EAEpBc,kBAFoB,CAAP,CAGbV,KAHa,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { startClock, serverRenderClock } from '../store'\nimport Examples from '../components/examples'\n\nclass Index extends React.Component {\n  static getInitialProps ({ reduxStore, req }) {\n    const isServer = !!req\n    // DISPATCH ACTIONS HERE ONLY WITH `reduxStore.dispatch`\n    reduxStore.dispatch(serverRenderClock(isServer))\n\n    return {}\n  }\n\n  componentDidMount () {\n    // DISPATCH ACTIONS HERE FROM `mapDispatchToProps`\n    // TO TICK THE CLOCK\n    this.timer = setInterval(() => this.props.startClock(), 1000)\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.timer)\n  }\n\n  render () {\n    return <Examples />\n  }\n}\nconst mapDispatchToProps = { startClock }\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Index)"]},"metadata":{},"sourceType":"module"}